<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CreateGlobalGameAttributes
score = 0; //Set game score to 0;
time = 6.5 * 60; //Set timer to 5:00 minutes
alarm[0] = 1 * 60; //set countdown to 1 second every 60 frames
alarm[1] = 10 *60;

//Start music at beginning of game
audio_play_sound(snd_timelineMelody, 99, false)

//Explosion sfx array
explosions[0] = snd_explosion1;explosions[1] = snd_explosion2;explosions[2] = snd_explosion3;
explosions[3] = snd_explosion4;explosions[4] = snd_explosion5;explosions[5] = snd_explosion6;
explosions[6] = snd_explosion7;explosions[7] = snd_explosion8;explosions[8] = snd_explosion9;
explosions[9] = snd_explosion10;explosions[10] = snd_explosion11;explosions[11] = snd_explosion12;
explosions[12] = snd_explosion13;explosions[13] = snd_explosion14;explosions[14] = snd_explosion15;
explosions[15] = snd_explosion16;explosions[16] = snd_explosion17;explosions[17] = snd_explosion18;
explosions[18] = snd_explosion19;explosions[19] = snd_explosion20; explosions[20] = snd_explosion21;
explosions[21] = snd_explosion22;

//Shoot sfx array
shoot[0] = snd_shoot1;
shoot[1] = snd_shoot2;
shoot[2] = snd_shoot3;



 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Countdown
time -= 1; //Subtract 1 second
if(time != 0){
alarm[0] = 1 * 60;} //Reset subtraction clock to 1 second
if(time == 0) finalScore = score;
if(time &lt;= 0) audio_play_sound(snd_victory, 99, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CheckForGameState
/*if(time &lt;= 0){
//room_goto(rm_endgame);
}*/
/*if keyboard_check(ord('T')){
time -= 10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DrawGUI
//draw_text(5,5, string(score))
draw_text_transformed(20,20,string("Throw Stuff:"),1,1,0)
draw_text_transformed(20,35,string("zxcvbasdfgqwert"),1,1,0)
draw_text_transformed(20,50,string("move: space&amp;arrows"),1,1,0)
draw_text_transformed(20,80,string("Score: "),1,1,0)
draw_text_transformed(80,80,string(score),1,1,0) //Draw socre position and scale size
draw_text_transformed(20,95,string("Time: "),1,1,0)
draw_text_transformed(80,95,string(time),1,1,0); //Draw timer

//draw_text_transformed(20,200,string("Jump&amp;Move:Space&amp;Arrows"),1,1,0)

if(time &lt;= 0){ //When timer reaches 0, display final score; rm will switch to rm_endgame
draw_text_transformed(342,384,string("Final Score: "),2,2,0) //Draw text "Final score in middle of screen
draw_text_transformed(602,384,string(finalScore),2,2,0)} //Draw final score at end of game

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
